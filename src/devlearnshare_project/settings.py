"""
Django settings for devlearnshare_project project.

Generated by 'django-admin startproject' using Django 4.2.17.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

from pathlib import Path


# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-0w*!%gyyz5zfq=4qc08!yoq$=ti)yv0gx9*st9=i3@1uw2o)xg'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['13.54.73.81']


# Application definition

INSTALLED_APPS = [
    'django.contrib.sites',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'member.apps.MemberConfig',
    'scraper.apps.ScraperConfig',
    'allauth',
    'allauth.account',
    'allauth.socialaccount',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'allauth.account.middleware.AccountMiddleware',  # 추가된 미들웨어
]

ROOT_URLCONF = 'devlearnshare_project.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'devlearnshare_project.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': 'db',
        'USER': 'admin',
        'PASSWORD': 'admin',
        'HOST': 'db',
        'PORT': '5432',

    }
}


# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


AUTH_USER_MODEL = "member.User"


# 정적 파일을 저장하는 기본 디렉토리
STATIC_URL = '/static/'

# 정적 파일을 추가적으로 찾을 디렉토리들
STATICFILES_DIRS = [
    BASE_DIR / "static",  # 프로젝트 루트의 static 디렉토리
]

import os
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')



# 프로젝트 루트 디렉토리에 media 폴더를 생성
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

# 미디어 파일에 접근할 때 사용할 URL 경로
MEDIA_URL = '/media/'

SITE_ID = 1


AUTHENTICATION_BACKENDS = [
    'django.contrib.auth.backends.ModelBackend',  # Django 기본 인증
    'allauth.account.auth_backends.AuthenticationBackend',  # django-allauth 인증
]

LOGIN_REDIRECT_URL = '/find-channel/'
LOGOUT_REDIRECT_URL = '/find-channel/'

ACCOUNT_AUTHENTICATION_METHOD = 'username_email'  # 사용자 이름 또는 이메일로 로그인
ACCOUNT_EMAIL_REQUIRED = True  # 이메일 필수
ACCOUNT_EMAIL_VERIFICATION = 'optional'  # 이메일 인증 ('mandatory', 'optional', 'none')

ACCOUNT_USERNAME_REQUIRED = True  # 사용자 이름 필수
ACCOUNT_SIGNUP_REDIRECT_URL = '/main/'  # 회원가입 후 리디렉션. default는 /profile/
ACCOUNT_LOGOUT_ON_GET = True  # GET 요청으로 로그아웃


EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'
CSRF_TRUSTED_ORIGINS = [
    "http://13.54.73.81"
]
